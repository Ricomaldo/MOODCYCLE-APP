//
// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
// üìÑ File: src/config/api.js
// üß© Type: Config
// üìö Description: Configuration centralis√©e des endpoints et options API pour l‚Äôapp MoodCycle
// üïí Version: 3.0 - 2025-06-21
// üß≠ Used in: global API config, services, data fetching
// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
//
/**
 * üéØ CONFIGURATION API MVP
 * Simple et pragmatique - √©vite over-engineering
 */
const API_CONFIG = {
  development: {
    baseURL: "https://moodcycle.irimwebforge.com", // Sans /api (Nginx le g√®re)
    endpoints: {
      chat: '/api/chat',  // Nginx proxy /api/* vers Express
      health: '/api/health',
    },
      timeout: 10000,
    retries: 2,
  },
  production: {
    baseURL: "https://moodcycle.irimwebforge.com",
    endpoints: {
      chat: '/api/chat',
      health: '/api/health',
    },
    timeout: 15000,
    retries: 3,
  },
};

/**
 * üîß R√âCUP√âRATION CONFIG ACTIVE
 * Auto-s√©lection d√©veloppement/production
 */
export const getApiConfig = () => {
  const config = __DEV__ ? API_CONFIG.development : API_CONFIG.production;

  if (__DEV__) {
    console.log("üîß API Config (DEV):", config.baseURL);
  }

  return config;
};

/**
 * üåê URL API RAPIDE (backward compatibility)
 * Pour migration facile du code existant
 */
export const getApiUrl = () => {
  return getApiConfig().baseURL;
};

/**
 * üéØ R√âCUP√âRATION URL ENDPOINT SP√âCIFIQUE
 * Combine baseURL + endpoint sp√©cifique
 */
export const getEndpointUrl = (endpointName) => {
  const config = getApiConfig();
  const endpoint = config.endpoints?.[endpointName];
  
  if (!endpoint) {
    console.warn(`‚ö†Ô∏è Endpoint '${endpointName}' non trouv√© dans la config`);
    return `${config.baseURL}/api/${endpointName}`;
  }
  
  return `${config.baseURL}${endpoint}`;
};

/**
 * ‚öôÔ∏è CONFIGURATION COMPL√àTE
 * Headers, timeout, etc. pour les appels
 */
export const getApiRequestConfig = (deviceId) => {
  const config = getApiConfig();

  return {
    baseURL: config.baseURL,
    endpoints: config.endpoints,
    timeout: config.timeout,
    headers: {
      "Content-Type": "application/json",
      "X-Device-ID": deviceId,
      "X-App-Version": "1.0.0-mvp",
    },
    retries: config.retries,
  };
};

// Export par d√©faut pour compatibilit√©
export default {
  getApiConfig,
  getApiUrl,
  getEndpointUrl,
  getApiRequestConfig,
};
